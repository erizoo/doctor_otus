[versions]
constraintlayoutVersion = "2.1.4"
ktx = "1.12.0"
appCompat = "1.6.1"
material = "1.11.0-alpha02"
constraintLayout = "2.2.0-alpha12"
materialVersion = "1.9.0"
navigationFragmentKtx = "2.7.3"
navigationUiKtx = "2.7.3"
lifecycleExtensions = "2.2.0"
lifecycle = "2.6.2"
jUnit = "5.8.1"
retrofit = "2.9.0"
gson = "2.10.1"
cicerone = "7.1"
okhttp = "5.0.0-alpha.11"
dagger = "2.48"
tinkoffDdecoro = "1.5.2"
inputMask = "6.0.0"
kotlinStdlib = "1.10.1"
securityCrypto = "1.1.0-alpha06"
biometricKtx = "1.2.0-alpha05"
coil = "2.4.0"
powerspinner = "1.2.7"
dexter = "6.2.3"
coroutines = "1.7.3"
androidsvg = "1.4"
mockito = "5.5.0"
mockito-inline = "5.2.0"
kaspresso = "1.5.3"
espresso = "3.5.1"
androidx-test-runner = "1.5.2"
androidx-test-rules = "1.5.0"
androidx-test-junit-ktx = "1.1.5"
detekt = "1.23.1"

[libraries]
androidx-ktx = { module = 'androidx.core:core-ktx', version.ref = "ktx" }
androidx-appcompat = { module = 'androidx.appcompat:appcompat', version.ref = "appCompat" }
material-design = { module = "com.google.android.material:material", version.ref = "materialVersion" }
constraintlayout = { module = 'androidx.constraintlayout:constraintlayout', version.ref = "constraintLayout" }
navigation-fragment = { module = 'androidx.navigation:navigation-fragment-ktx', version.ref = "navigationFragmentKtx" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigationUiKtx" }
lifecycle-extensions = { module = 'androidx.lifecycle:lifecycle-extensions', version.ref = "lifecycleExtensions" }
junit-jupiter = { module = 'org.junit.jupiter:junit-jupiter-api', version.ref = "jUnit" }
junit-jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine', version.ref = "jUnit" }
kaspresso = { module = 'com.kaspersky.android-components:kaspresso', version.ref = "kaspresso" }
retrofit-newtwork = { module = 'com.squareup.retrofit2:retrofit', version.ref = "retrofit" }
retrofit-gson = { module = 'com.squareup.retrofit2:converter-gson', version.ref = "retrofit" }
retrofit-scalars = { module = 'com.squareup.retrofit2:converter-scalars', version.ref = "retrofit" }
cicerone-navigation = { module = 'com.github.terrakok:cicerone', version.ref = "cicerone" }
okhttp-network = { module = 'com.squareup.okhttp3:okhttp', version.ref = "okhttp" }
okhttp-logging = { module = 'com.squareup.okhttp3:logging-interceptor', version.ref = "okhttp" }
dagger-di = { module = 'com.google.dagger:dagger', version.ref = "dagger" }
dagger-compiler = { module = 'com.google.dagger:dagger-compiler', version.ref = "dagger" }
decoro-tinkoff = { module = 'ru.tinkoff.decoro:decoro', version.ref = "tinkoffDdecoro" }
input-mask = { module = 'com.redmadrobot:input-mask-android', version.ref = "inputMask" }
kotlin-stdlib = { module = 'org.jetbrains.kotlin:kotlin-stdlib', version.ref = "kotlinStdlib" }
gson-google = { module = 'com.google.code.gson:gson', version.ref = "gson" }
security-crypto = { module = 'androidx.security:security-crypto', version.ref = "securityCrypto" }
biometric-ktx = { module = 'androidx.biometric:biometric-ktx', version.ref = "biometricKtx" }
coil = { module = 'io.coil-kt:coil', version.ref = "coil" }
coil-svg = { module = 'io.coil-kt:coil-svg', version.ref = "coil" }
dexter = { module = 'com.karumi:dexter', version.ref = "dexter" }
powerspinner = { module = 'com.github.skydoves:powerspinner', version.ref = "powerspinner" }
coroutines = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-android', version.ref = "coroutines" }
lifecycle-runtime = { module = 'androidx.lifecycle:lifecycle-runtime-ktx', version.ref = "lifecycle" }
lifecycle-viewmodel = { module = 'androidx.lifecycle:lifecycle-viewmodel-ktx', version.ref = "lifecycle" }
androidsvg = { module = 'com.caverock:androidsvg-aar', version.ref = "androidsvg" }
mockito = { module = 'org.mockito:mockito-core', version.ref = "mockito" }
mockito-android = { module = 'org.mockito:mockito-android', version.ref = "mockito" }
mockito-inline = { module = 'org.mockito:mockito-inline', version.ref = "mockito-inline" }
espresso = { module = 'androidx.test.espresso:espresso-core', version.ref = "espresso" }
androidx-test-runner = { module = 'androidx.test:runner', version.ref = "androidx-test-runner" }
androidx-test-rules = { module = 'androidx.test:rules', version.ref = "androidx-test-rules" }
androidx-test-junit-ktx = { module = 'androidx.test.ext:junit-ktx', version.ref = "androidx-test-junit-ktx" }
detekt = { module = 'io.gitlab.arturbosch.detekt:detekt-api', version.ref = "detekt" }
detekt-formatting = { module = 'io.gitlab.arturbosch.detekt:detekt-formatting', version.ref = "detekt" }

[plugins]